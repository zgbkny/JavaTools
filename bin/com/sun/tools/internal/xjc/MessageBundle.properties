Driver.StackOverflow=Stack overflow. Either you are compiling a large schema that requires more resource, or XJC has a bug. First, please extend the stack size by using the -Xss JVM option. If this doesn'''t solve the problem, please use the -debug option to obtain the stack trace and contact Sun. 
Driver.InfoMessage=[INFO] {0}
Driver.WarningMessage=[WARNING] {0}
Driver.ParseFailed=Failed to parse a schema.
Driver.NotAFileNorURL="{0}" is neither a file name nor an URL
ModelLoader.BindingFileNotSupportedForRNC=External binding files are not supported for the RELAX NG compact syntax.
ConsoleErrorReporter.UnknownLocation=unknown location
Driver.DefaultVersion=Defaulting the version to JAXB 2.0
Driver.ParsingSchema=parsing a schema...
Driver.NotABindingFile=not an external binding file. The root element must be '{'http\://java.sun.com/xml/ns/jaxb'}'bindings but it is '{'{0}'}'{1}
Driver.Public.Usage=Usage\: xjc [-options ...] <schema file/URL/dir> ... [-b <bindinfo>] ...\nOptions\:\n  -nv                \:  do not perform strict validation of the input schema(s)\n  -extension         \:  allow vendor extensions - do not strictly follow the\n                        Compatibility Rules and App E.2 from the JAXB Spec\n  -b <file/dir>      \:  specify external bindings files (each <file> must have its own -b)\n                        If a directory is given, **/*.xjb is searched\n  -d <dir>           \:  generated files will go into this directory\n  -p <pkg>           \:  specifies the target package\n  -httpproxy <proxy> \:  set HTTP/HTTPS proxy. Format is [user[\:password]@]proxyHost\:proxyPort\n  -httpproxyfile <f> \:  Works like -httpproxy but takes the argument in a file to protect password \n  -classpath <arg>   \:  specify where to find user class files\n  -catalog <file>    \:  specify catalog files to resolve external entity references\n                        support TR9401, XCatalog, and OASIS XML Catalog format.\n  -readOnly          \:  generated files will be in read-only mode\n  -npa               \:  suppress generation of package level annotations (**/package-info.java)\n  -no-header         \:  suppress generation of a file header with timestamp\n  -xmlschema         \:  treat input as W3C XML Schema (default)\n  -relaxng           \:  treat input as RELAX NG (experimental,unsupported)\n  -relaxng-compact   \:  treat input as RELAX NG compact syntax (experimental,unsupported)\n  -dtd               \:  treat input as XML DTD (experimental,unsupported)\n  -wsdl              \:  treat input as WSDL and compile schemas inside it (experimental,unsupported)\n  -verbose           \:  be extra verbose\n  -quiet             \:  suppress compiler output\n  -help              \:  display this help message\n  -version           \:  display version information\n
Driver.MISSING_PROXYFILE=the -httpproxyfile option is missing an operand
Driver.UnrecognizedMode=unrecognized mode {0}
Driver.NotAValidFileName="{0}" is not a valid file name\: {1}
Driver.MissingModeOperand=the -mode option is missing an operand
Driver.MissingRuntimePackageName=the -use-runtime option is missing a package name
Driver.MissingProxyPort=either the -port option is missing an operand \nor -host was specified but not -port
Driver.At=at
Driver.FailedToGenerateCode=Failed to produce code.
Driver.ErrorMessage=[ERROR] {0}
Driver.MissingCatalog=the -catalog option is missing a file name
Driver.MissingClassPath=the -classpath option is missing a directory/jarfile name
Driver.CompilingSchema=compiling a schema...
Driver.Version=xjc version "JAXB 2.0 in JDK 1.6" \nJavaTM Architecture for XML Binding(JAXB) Reference Implementation, (build JAXB 2.0 in JDK 1.6)\t
Driver.DateFormat=yyyy.MM.dd
ConsoleErrorReporter.LineXOfY=\  line {0} of {1}
FIELD_RENDERER_CONFLICT="-{0}" and "-{1}" are mutually exclusive since both affect the code generation 
Driver.UnrecognizedParameter=unrecognized parameter {0}
Driver.FailedToParse=Failed to parse "{0}"\: {1}
Driver.NonExistentDir=cowardly refuses to write to a non-existent directory "{0}"
Driver.MissingFileName=the -b option is missing a file name
Driver.MissingCompatibilityOperand=the -compatibility option is missing an operand
Driver.ILLEGAL_PROXY="{0}" is not a valid proxy format. The format is [user[\:password]@]proxyHost\:proxyPort
Driver.MISSING_PROXY=the -httpproxy option is missing an operand
Driver.MissingGrammar=grammar is not specified
ConsoleErrorReporter.UnknownFile=unknown file
NAME_CONVERTER_CONFLICT=- "-{0}" and "-{1}" are mutually exclusive since both affect the code generation
Driver.TimeFormat=hh\:mm\:ss a z
Driver.AddonUsage=\nExtensions\:
Driver.MissingPackageName=the -p option is missing a package name
Driver.BuildID=JAXB 2.0 in JDK 1.6
Driver.MissingDir=the -d option is missing a directory name
Driver.DefaultPackageWarning=Default Java package specified.  You will not be able to access the generated code from classes in any other package.
Driver.MissingVersion=the -source option is missing the version value
Driver.MissingProxyHost=either the -host option is missing an operand \nor -port was specified but not -host
Driver.ExperimentalLanguageWarning=Are you trying to compile {0}? Support for {0} is experimental. You may enable it by using the {1} option.
Driver.NO_SUCH_FILE=No such file\: {0}
ModelLoader.TooManySchema=Too many schema files for this schema language. Compile one file at a time.
Driver.FilePrologComment=This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.0 in JDK 1.6 \nSee <a href\="http\://java.sun.com/xml/jaxb">http\://java.sun.com/xml/jaxb</a> \nAny modifications to this file will be lost upon recompilation of the source schema. \nGenerated on\: {0} \n
Driver.Private.Usage=Usage\: xjc [-options ...] <schema file/URL/dir> ... [-b <bindinfo>] ...\nOptions\:\n  -debug             \:  run in the debug mode\n  -nv                \:  do not perform strict validation of the input schema(s)\n  -extension         \:  allow vendor extensions - do not strictly follow the\n                        Compatibility Rules and App E.2 from the JAXB Spec\n  -mode <mode>       \:  run XJC in other running mode\n  -b <file/dir>      \:  specify external bindings files (each <file> must have its own -b)\n                        If a directory is given, **/*.xjb is searched\n  -d <dir>           \:  generated files will go into this directory\n  -httpproxy <proxy> \:  set HTTP/HTTPS proxy. Format is [user[\:password]@]proxyHost\:proxyPort\n  -httpproxyfile <f> \:  Works like -httpproxy but takes the argument in a file to protect password \n  -classpath <arg>   \:  specify where to find user class files\n  -catalog <file>    \:  specify catalog files to resolve external entity references\n                        support TR9401, XCatalog, and OASIS XML Catalog format.\n  -readOnly          \:  generated files will be in read-only mode\n  -npa               \:  suppress generation of package level annotations (**/package-info.java)\n  -no-header         \:  suppress generation of a file header with timestamp\n  -private           \:  display this help message\n  -xmlschema         \:  treat input as W3C XML Schema (default)\n  -relaxng           \:  treat input as RELAX NG (experimental,unsupported)\n  -relaxng-compact   \:  treat input as RELAX NG compact syntax (experimental,unsupported)\n  -dtd               \:  treat input as XML DTD (experimental,unsupported)\n  -wsdl              \:  treat input as WSDL and compile schemas inside it (experimental,unsupported)\n  -version           \:  display version information\n  -verbose           \:  be extra verbose\n  -quiet             \:  suppress compiler output\nMode\:\n  code         \:  generate Java source code (default)\n  dryrun       \:  compile the schema in memory, but don't generate the Java source\n  zip          \:  generate Java source code into a zip file specified by the -d option\n  sig          \:  dump the signatures of the generated code\n  forest       \:  dump transformed DOM forest\nOptions in Code mode\:\n  -p <pkg>     \:  specifies the target package\n
